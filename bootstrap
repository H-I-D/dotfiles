#!/bin/bash -eu
# consts
# --------------
DOT_HOME=~/dotfiles
REMOTE_URL="git@github.com:H-I-D/dotfiles.git"

# functions
# --------------
has() {
  type "$1" > /dev/null 2>&1
}

usage() {
  name=`basename $0`
  cat <<\EOF

                   __          __       ___      ___
                  /\ \        /\ \__  /'___\ __ /\_ \
                  \_\ \    ___\ \ ,_\/\ \__//\_\\//\ \      __    ____
 _______          /'_` \  / __`\ \ \/\ \ ,__\/\ \ \ \ \   /'__`\ /',__\      _______
/\______\      __/\ \L\ \/\ \L\ \ \ \_\ \ \_/\ \ \ \_\ \_/\  __//\__, `\    /\______\
\/______/     /\_\ \___,_\ \____/\ \__\\ \_\  \ \_\/\____\ \____\/\____/    \/______/
              \/_/\/__,_ /\/___/  \/__/ \/_/   \/_/\/____/\/____/\/___/

Commands:
  init (download dotfiles)
  deploy (symlink dotfiles)

EOF
}

download() {
  if [ ! -d ${DOT_HOME} ]; then
    echo "Downloading dotfiles..."
    mkdir ${DOT_HOME}
    if has "git"; then
      git clone --recursive "${REMOTE_URL}" "${DOT_HOME}"
    else
      echo $(tput setaf 1)please install git.$(tput sgr0)
      exit 1
    fi
    echo $(tput setaf 2)Download dotfiles complete. ✔︎$(tput sgr0)
  fi
}

symlink_files() {
  echo "Symlinking dotfiles..."
  for f in .??*
  do
    # ignore list
    [[ ${f} = ".git" ]] && continue
    [[ ${f} = ".gitignore" ]] && continue
    ln -snfv ${DOT_HOME}/${f} ${HOME}/${f}
  done
  echo $(tput setaf 2)Symlink dotfiles complete. ✔︎$(tput sgr0)
}

# exec
# --------------
usage
echo -n "command: "
read command
case $command in
  init)
    download
    ;;
  deploy)
    symlink_files
    ;;
  *)
    echo $(tput setaf 1)bootstrap: command not found.$(tput sgr0)
    exit 1
    ;;
esac

exit 0
